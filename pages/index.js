import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Container from 'react-bootstrap/Container';
import Nav from 'react-bootstrap/Nav';
import Navbar from 'react-bootstrap/Navbar';
import NavDropdown from 'react-bootstrap/NavDropdown';
import {Modal} from 'react-bootstrap';
import {credential, createUserWithEmailAndPassword,GithubAuthProvider,GoogleAuthProvider,signInWithEmailAndPassword,signInWithPopup,TwitterAuthProvider} from "@firebase/auth";
import { authService } from '../src/firebase';
import { useState,useEffect } from 'react';
import Link from 'next/link';
import {useDispatch,useSelector} from 'react-redux'
import { changeName } from '../src/components/store';
import { useRouter } from 'next/router';
import { Button, Icon } from 'semantic-ui-react'





export default function Home() {

  const [result,setResult]=useState("")
  const [isComplete,setIsComplete]=useState(false)
  const [clickTwitter,setClickTwitter]=useState(false)
  const [clickDiscord,setClickDiscord]=useState(false)
  const [disable,setDisable] = useState(true)
  const [user,setUser]=useState("")

  let dispatch=useDispatch()
  let state=useSelector((state)=>{return state})
  console.log(state)

  const router = useRouter()


  const onSocialClick = async (event) => {
    const {
    target: { name },
    } = event;
    let provider;
    try {
    if (name === "twitter") {
    // provider = new GoogleAuthProvider();
    provider = new TwitterAuthProvider()
    const result = await signInWithPopup(authService, provider);
    const credential = TwitterAuthProvider.credentialFromResult(result);
    setResult(result)
    setIsComplete(true)
    dispatch(changeName(result.user.reloadUserInfo.screenName))
    const token = credential.accessToken;
    } else if (name === "github") {
    provider = new GithubAuthProvider();
    const result = await signInWithPopup(authService, provider);
    const credential = GithubAuthProvider.credentialFromResult(result);
    const token = credential.accessToken;
    } 
    
    } catch (error) {
    console.log(error);
    }
    };
  
  const Click = (event)=>{
    if (event.target.name==="twitter"){
      setClickTwitter(true)
    }
    if (event.target.name==="discord"){
      setClickDiscord(true)
    } 
  }

  useEffect(() => {
    if ((clickTwitter===true)&&(clickDiscord===true)){
      setDisable(false)
    }
  }, [clickTwitter,clickDiscord]);

  const letsStart=()=>{
    router.push('/list')
  }

  console.log(result)
  console.log(clickTwitter,clickDiscord)
  

  return (
    <>
      <Head>
        <title>Pantera ICO</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

        <main className={styles.main}>
          
          {
            isComplete===true
            ?(
              <>
              
              <Modal.Dialog className={styles.modal_dialog}>
                <Modal.Header>
                  <Modal.Title className={styles.modal_text}> <h2>Nice to meet you! @{result.user.reloadUserInfo.screenName}</h2> </Modal.Title>
                </Modal.Header>
          
                <Modal.Body>
                  <h3 className={styles.modal_text}>Step1:<br/>Follow our Twitter</h3>
                  <div className={styles.container_pantera}><h4 className={styles.modal_text}><button id='twitter'onClick={()=>{Click(event)}} className={styles.link_button}><Link href="https://twitter.com/panteraico"><a name="twitter"target="_blank" >@Pantera ICO</a></Link></button></h4></div>
                    <h3 className={styles.modal_text}>Step2:<br/>Join our Discord</h3>
                  <div className={styles.container_pantera}><h4 className={styles.modal_text}><button id='discord'onClick={()=>{Click(event)}}className={styles.link_button}><Link href="https://discord.gg/9mZURWspVq"><a name="discord"target="_blank" >@Pantera ICO</a></Link></button></h4></div>
                </Modal.Body>
          
                <Modal.Footer>
                  <Button onClick={()=>{letsStart()}}disabled={disable}variant="primary">Lets start</Button>
                </Modal.Footer>
              </Modal.Dialog>
            </>
            )
            :(
            <>
            <h1 className={styles.title}>
              <b>Welcome!</b>
            </h1>
    
            <p className={styles.description}>
              Please login through SNS
            </p>
    
            <div className={styles.grid}>
              <Button onClick={onSocialClick} name="twitter" color='twitter'>
                <Icon name='twitter' /> Twitter
              </Button>
            </div>
            </>
            )
          }

        </main> 
        
    </>
  )
}
